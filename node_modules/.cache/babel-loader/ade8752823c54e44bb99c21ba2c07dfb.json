{"ast":null,"code":"var _jsxFileName = \"/Users/mwoloszuk/Software/drawing-in-space/src/generate-paths.js\";\nimport React from \"react\"; // --------------------------------------------------------------------------\n// Path drawing code\n// --------------------------------------------------------------------------\n\nexport default function generatePathSegments(points) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"segment\";\n  var segments = [];\n  var currentSegment = [];\n  points.forEach(function (p) {\n    currentSegment.push(p);\n\n    if (p.isEndOfSegment) {\n      segments.push(React.createElement(\"path\", {\n        key: key + segments.length,\n        className: key,\n        d: generatePath(currentSegment),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n      currentSegment = [];\n    }\n  }); // Flush out last segment\n\n  if (currentSegment.length) {\n    segments.push(React.createElement(\"path\", {\n      key: key + segments.length,\n      className: key,\n      d: generatePath(currentSegment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n  return segments;\n}\n\nfunction generatePath(points) {\n  return points.reduce(function (out, p, i) {\n    return p.x !== null && p.y !== null ? \"\".concat(out, \" \").concat(i === 0 ? \"M\" : \"L\", \" \").concat(p.x, \" \").concat(p.y, \" \") : out;\n  }, \"\");\n}","map":{"version":3,"sources":["/Users/mwoloszuk/Software/drawing-in-space/src/generate-paths.js"],"names":["React","generatePathSegments","points","key","segments","currentSegment","forEach","p","push","isEndOfSegment","length","generatePath","reduce","out","i","x","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AAEA,eAAe,SAASC,oBAAT,CAA8BC,MAA9B,EAAuD;AAAA,MAAjBC,GAAiB,uEAAX,SAAW;AACpE,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,cAAc,GAAG,EAArB;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAe,UAAAC,CAAC,EAAI;AAClBF,IAAAA,cAAc,CAACG,IAAf,CAAoBD,CAApB;;AACA,QAAIA,CAAC,CAACE,cAAN,EAAsB;AACpBL,MAAAA,QAAQ,CAACI,IAAT,CACE;AACE,QAAA,GAAG,EAAEL,GAAG,GAAGC,QAAQ,CAACM,MADtB;AAEE,QAAA,SAAS,EAAEP,GAFb;AAGE,QAAA,CAAC,EAAEQ,YAAY,CAACN,cAAD,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOAA,MAAAA,cAAc,GAAG,EAAjB;AACD;AACF,GAZD,EAHoE,CAiBpE;;AACA,MAAIA,cAAc,CAACK,MAAnB,EAA2B;AACzBN,IAAAA,QAAQ,CAACI,IAAT,CACE;AACE,MAAA,GAAG,EAAEL,GAAG,GAAGC,QAAQ,CAACM,MADtB;AAEE,MAAA,SAAS,EAAEP,GAFb;AAGE,MAAA,CAAC,EAAEQ,YAAY,CAACN,cAAD,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SAAOD,QAAP;AACD;;AAED,SAASO,YAAT,CAAsBT,MAAtB,EAA8B;AAC5B,SAAOA,MAAM,CAACU,MAAP,CACL,UAACC,GAAD,EAAMN,CAAN,EAASO,CAAT;AAAA,WACEP,CAAC,CAACQ,CAAF,KAAQ,IAAR,IAAgBR,CAAC,CAACS,CAAF,KAAQ,IAAxB,aACOH,GADP,cACcC,CAAC,KAAK,CAAN,GAAU,GAAV,GAAgB,GAD9B,cACqCP,CAAC,CAACQ,CADvC,cAC4CR,CAAC,CAACS,CAD9C,SAEIH,GAHN;AAAA,GADK,EAKL,EALK,CAAP;AAOD","sourcesContent":["import React from \"react\";\n\n// --------------------------------------------------------------------------\n// Path drawing code\n// --------------------------------------------------------------------------\n\nexport default function generatePathSegments(points, key = \"segment\") {\n  const segments = [];\n  let currentSegment = [];\n  points.forEach(p => {\n    currentSegment.push(p);\n    if (p.isEndOfSegment) {\n      segments.push(\n        <path\n          key={key + segments.length}\n          className={key}\n          d={generatePath(currentSegment)}\n        />\n      );\n      currentSegment = [];\n    }\n  });\n\n  // Flush out last segment\n  if (currentSegment.length) {\n    segments.push(\n      <path\n        key={key + segments.length}\n        className={key}\n        d={generatePath(currentSegment)}\n      />\n    );\n  }\n\n  return segments;\n}\n\nfunction generatePath(points) {\n  return points.reduce(\n    (out, p, i) =>\n      p.x !== null && p.y !== null\n        ? `${out} ${i === 0 ? \"M\" : \"L\"} ${p.x} ${p.y} `\n        : out,\n    \"\"\n  );\n}\n"]},"metadata":{},"sourceType":"module"}